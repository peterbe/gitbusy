"""
Django settings for gitbusy project.

Generated by 'django-admin startproject' using Django 3.0b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

from pathlib import Path

from decouple import config, Csv
from django.core.exceptions import ImproperlyConfigured

BASE_DIR = Path(__file__).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

SECRET_KEY = config("SECRET_KEY", default="secret")

DEBUG = config("DEBUG", default=False, cast=bool)
DEBUG_PROPAGATE_EXCEPTIONS = config("DEBUG_PROPAGATE_EXCEPTIONS", False, cast=bool)

ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv(), default="0.0.0.0,localhost")

# Generate a key here: https://github.com/settings/tokens
GITHUB_API_TOKEN = config("GITHUB_API_TOKEN")

if not DEBUG and not GITHUB_API_TOKEN:
    raise ImproperlyConfigured(
        "If you're not in DEBUG mode, you have to GITHUB_API_TOKEN"
    )


# https://docs.djangoproject.com/en/3.0/ref/settings/#secure-ssl-redirect
SECURE_SSL_REDIRECT = config("SECURE_SSL_REDIRECT", cast=bool, default=not DEBUG)

# Application definition

INSTALLED_APPS = [
    "django.contrib.contenttypes",
    "gitbusy.api",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "gitbusy.middleware.CustomWhiteNoiseMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "gitbusy.api.middleware.RateLimitedMiddleware",
]

WHITENOISE_INDEX_FILE = True

ROOT_URLCONF = "gitbusy.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "gitbusy.wsgi.application"


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": str(BASE_DIR / "db.sqlite3"),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = "/"

# https://github.com/niwinz/django-redis/pull/394
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "unique-snowflake",
    }
}


STATIC_ROOT = BASE_DIR / "frontend" / "build"
if not STATIC_ROOT.exists():
    import warnings

    warnings.warn(f"{STATIC_ROOT} does NOT exist. Might cause problems with Whitenoise")

CACHE_REQUESTS = config("CACHE_REQUESTS", default=DEBUG, cast=bool)
CACHE_REQUESTS_FILE = config("CACHE_REQUESTS_FILE", default="/tmp/requests_cache")
